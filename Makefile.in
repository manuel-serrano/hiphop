#* Generated file, don't edit
#*=====================================================================*/
#*    serrano/prgm/project/hiphop/hiphop/Makefile.in                   */
#*    -------------------------------------------------------------    */
#*    Author      :  Manuel Serrano                                    */
#*    Creation    :  Fri Jan 20 14:35:57 2006                          */
#*    Last change :  Tue Mar 11 16:26:47 2025 (serrano)                */
#*    Copyright   :  2006-25 Manuel Serrano                            */
#*    -------------------------------------------------------------    */
#*    Generic Makefile to build Hop weblets.                           */
#*=====================================================================*/
## run "make" to build the .hz file

#*---------------------------------------------------------------------*/
#*    Weblet description                                               */
#*---------------------------------------------------------------------*/
HZ=@HZ@
HZVERSION=@VERSION@
DATE="@DATE@"

CATEGORY=programming
LICENSE=@LICENSE@

LIBDIR=@LIBDIR@
HOPREPOSITORY=@HOPREPOSITORY@
HOPLIBDIR=@HOPLIBDIR@
HOPVERSION=@HOPVERSION@
HOPBUILDTAG=@HOPBUILDTAG@
HOPBUILDARCH=@HOPBUILDARCH@
HOPSODIR=@SODIR@
HOPSHAREDIR=@HOPSHAREDIR@

HIPHOPBUILDID=@HIPHOPBUILDID@

HIPHOPLIBDIR=$(LIBDIR)/$(HZ)/$(HZVERSION)
HIPHOPNPMDIR=hiphop-$(HZVERSION)-$(HIPHOPBUILDID)

HOP=@HOP@
HOPJS=@HOPJS@
HOPC=@HOPC@
HFLAGS=@HFLAGS@
HHC=bin/hhc.sh --js-require-hop

LIB=ast.js batch.js compiler.js compiler-utils.js debugger-common.js \
 debugger.js debugger-server.js debug.js error.js hiphop.js lang.js \
 machine.js net.js queue.js signal.js sweep.js causality.js
LIBMJS=hiphop-loader.mjs

PREPROCESSOR=astutils.js parser.js hhaccess.js

ULIB=parallelmap.js

MODULES=interval.hh.js http.hh.js promise.hh.js timeout.hh.js

SOFILES=$(LIB:%.js=lib/$(HOPSODIR)/%.@SO@) \
  $(LIBMJS:%.mjs=lib/$(HOPSODIR)/%.@SO@) \
  $(PREPROCESSOR:%.js=preprocessor/$(HOPSODIR)/%.@SO@) \
  $(MODULES:%.hh.js=modules/._%.js) \
  $(MODULES:%.hh.js=modules/$(HOPSODIR)/%.@SO@)

SODIR=@SODIR@
JSDIR=$(LIBDIR)/$(HZVERSION)

MODFILE=a+r
MODEXE=a+rx
MODDIR=a+rx

#*---------------------------------------------------------------------*/
#*    do                                                               */
#*---------------------------------------------------------------------*/
.PHONY: do so

do: lib/$(HOPSODIR) preprocessor/$(HOPSODIR) modules/$(HOPSODIR)
	$(MAKE) so

so: $(SOFILES) lib/$(HOPSODIR)/config.@SO@ ChangeLog
	@ echo "Compilation complete."

#*---------------------------------------------------------------------*/
#*    npm                                                              */
#*---------------------------------------------------------------------*/
.PHONY: npm

npm-hiphop:
	mkdir -p npm/$(HIPHOPNPMDIR)
	mkdir -p npm/$(HIPHOPNPMDIR)/lib
	mkdir -p npm/$(HIPHOPNPMDIR)/bin
	mkdir -p npm/$(HIPHOPNPMDIR)/etc
	mkdir -p npm/$(HIPHOPNPMDIR)/modules
	cp package.json npm/$(HIPHOPNPMDIR)
	cp -r lib npm/$(HIPHOPNPMDIR)
	mv npm/$(HIPHOPNPMDIR)/lib/hiphop-client.mjs npm/$(HIPHOPNPMDIR)
	cp -r preprocessor npm/$(HIPHOPNPMDIR)
	cp -r modules/*.js npm/$(HIPHOPNPMDIR)/modules
	cp -r modules/*.d.ts npm/$(HIPHOPNPMDIR)/modules
	cp -r test npm/$(HIPHOPNPMDIR)
	cp -r etc/configure.js npm/$(HIPHOPNPMDIR)/etc
	cp -r etc/buildmodules.js npm/$(HIPHOPNPMDIR)/etc
	echo "#!/usr/bin/env node" > npm/$(HIPHOPNPMDIR)/bin/hhc.mjs
	echo "import * as hhc from \"../lib/hhc.js\"" >> npm/$(HIPHOPNPMDIR)/bin/hhc.mjs
	chmod a+rx npm/$(HIPHOPNPMDIR)/bin/hhc.mjs
	cp tools/nets2dot.mjs npm/$(HIPHOPNPMDIR)/bin/nets2dot.mjs
	chmod a+rx npm/$(HIPHOPNPMDIR)/bin/nets2dot.mjs
	(cd npm/$(HIPHOPNPMDIR); $(HOPJS) -g etc/configure.js package.json lib/config.js.in lib/config.js && $(HOPJS) -g etc/buildmodules.js)
	(cd npm; tar --exclude="*.so" -zcf $(HIPHOPNPMDIR).tgz $(HIPHOPNPMDIR))

npm-hiphop-tutorial-async:
	mkdir -p npm
	cp -r tutorials/hiphop-tutorial-async npm/hiphop-tutorial-async-$(HZVERSION)-$(HIPHOPBUILDID)
	(cd npm; tar --exclude="*.so" -zcf hiphop-tutorial-async-$(HZVERSION)-$(HIPHOPBUILDID).tgz hiphop-tutorial-async-$(HZVERSION)-$(HIPHOPBUILDID))

npm-hiphop-tutorial-first:
	mkdir -p npm
	cp -r tutorials/hiphop-tutorial-first npm/hiphop-tutorial-first-$(HZVERSION)-$(HIPHOPBUILDID)
	(cd npm; tar --exclude="*.so" -zcf hiphop-tutorial-first-$(HZVERSION)-$(HIPHOPBUILDID).tgz hiphop-tutorial-first-$(HZVERSION)-$(HIPHOPBUILDID))

npm-sans-rm: npm-hiphop npm-hiphop-tutorial-async npm-hiphop-tutorial-first

npm-commit: npm-sans-rm
	(cd npm/$(HIPHOPNPMDIR); \
         mv package.json package.json.orig; \
         cat package.json.orig | \
            sed -e "s/\"version\": \"$(HZVERSION)\"/\"version\": \"$(HZVERSION)-$(HIPHOPBUILDID)\"/" \
               > package.json; \
         rm package.json.orig)
	(cd npm; tar --exclude="*.so" -zcf $(HIPHOPNPMDIR).tgz $(HIPHOPNPMDIR))

npm: npm-sans-rm 
	(cd npm; rm -rf $(HIPHOPNPMDIR))

#*---------------------------------------------------------------------*/
#*    .suffixes                                                        */
#*---------------------------------------------------------------------*/
.SUFFIXES:
.SUFFIXES: .js .mjs .hop .hh.js .@SO@

#*---------------------------------------------------------------------*/
#*    The implicit rules                                               */
#*---------------------------------------------------------------------*/
lib/$(HOPSODIR)/%.@SO@: lib/%.js
	$(HOPC) $(HFLAGS) -y -o $@ $<

lib/$(HOPSODIR)/%.@SO@: lib/%.mjs
	$(HOPC) $(HFLAGS) -y -o $@ $<

preprocessor/$(HOPSODIR)/%.@SO@: preprocessor/%.js
	$(HOPC) $(HFLAGS) -y -o $@ $<

modules/._%.js: modules/%.hh.js modules/node_modules/@hop/hiphop
	$(HOPJS) -g lib/hhc.js -o $@ $<

modules/$(HOPSODIR)/%.@SO@: modules/._%.js
	$(HOPC) $(HFLAGS) -y -o $@ $<

$(MODULES:%.js=modules/%.@SO@): modules/node_modules/@hop/hiphop \
  $(LIB:%.js=lib/%.@SO@)

modules/node_modules/@hop/hiphop: modules/node_modules/@hop
	(hiphop=`basename $$PWD`; cd modules/node_modules/@hop; rm -f hiphop; ln -s ../../../../$$hiphop hiphop)

modules/node_modules/@hop: modules/node_modules
	mkdir -p $@

modules/node_modules: modules
	mkdir -p $@

modules:
	mkdir -p $@

lib/$(HOPSODIR):
	mkdir -p $@

preprocessor/$(HOPSODIR):
	mkdir -p $@

modules/$(HOPSODIR):
	mkdir -p $@

#*---------------------------------------------------------------------*/
#*    install                                                          */
#*---------------------------------------------------------------------*/
.PHONY: install

install:
	mkdir -p $(DESTDIR)$(HIPHOPLIBDIR)
	# lib
	cp -r lib $(DESTDIR)$(HIPHOPLIBDIR) 
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/lib
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/lib/*.js
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/lib/*.mjs
	chmod -R $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/lib/so
	chmod $(MODEXE) $(DESTDIR)$(HIPHOPLIBDIR)/lib/$(HOPSODIR)/*.so
	# preprocessor
	cp -r preprocessor $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/*.js
	chmod -R $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/so
	chmod $(MODEXE) $(DESTDIR)$(HIPHOPLIBDIR)/preprocessor/$(HOPSODIR)/*.so
	# modules
	cp -r modules $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/modules
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/modules/*.js
	chmod -R $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/modules/so
	chmod $(MODEXE) $(DESTDIR)$(HIPHOPLIBDIR)/modules/$(HOPSODIR)/*.so
	# test
	cp -r test $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODDIR) $(DESTDIR)$(HIPHOPLIBDIR)/test
	# package.json
	cp package.json $(DESTDIR)$(HIPHOPLIBDIR)
	chmod $(MODFILE) $(DESTDIR)$(HIPHOPLIBDIR)/package.json
	# link hiphop into the hop directory
	cd $(DESTDIR)$(HOPLIBDIR)/hop/$(HOPVERSION)/node_modules/@hop; \
	rm -f hiphop; \
	ln -s $(DESTDIR)$(HIPHOPLIBDIR) hiphop

uninstall:
	rm -rf $(DESTDIR)$(HIPHOPLIBDIR)

#*---------------------------------------------------------------------*/
#*    clean                                                            */
#*---------------------------------------------------------------------*/
clean-npm:
	rm -rf npm

clean: 
	rm -rf lib/so
	rm -rf modules/so
	rm -rf preprocessor/so

cleanall: clean
	rm -f config.status
	rm -f lib/config.js
	rm -rf arch/debian/debian
	rm -rf modules/node_modules/@hop/hiphop
	rm -rf node_modules
	rm -f package-lock.json

distclean: cleanall

#*---------------------------------------------------------------------*/
#*    hz                                                               */
#*---------------------------------------------------------------------*/
.PHONY: distrib tgz hz $(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz

distrib: hz
hz: tgz
tgz: $(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz

$(HOPREPOSITORY)/$(HZ)-$(HZVERSION).tar.gz: \
  package.json \
  package-lock.json \
  modules \
  configure \
  Makefile.in Makefile \
  lib/config.js.in \
  lib/hiphop.d.ts \
  $(FILES) \
  LICENSE \
  arch \
  docker \
  etc \
  doc \
  .github/workflows/hiphop.yml \
  test \
  examples \
  tutorials \
  ChangeLog
	mkdir -p $(HOPREPOSITORY) && \
	(cd ..; \
	 cp -r $(HZ) $(HZ)-$(HZVERSION); \
         tar cfz $@ \
             --exclude='$(HZ)/private' \
             --exclude=.gitignore \
             --exclude=.git \
             --exclude=so \
             --exclude=arch/debian/build.$(HZ) \
             --exclude='*~' $(^:%=$(HZ)-$(HZVERSION)/%); \
         rm -rf $(HZ)-$(HZVERSION))

#*---------------------------------------------------------------------*/
#*    ChangeLog                                                        */
#*---------------------------------------------------------------------*/
ChangeLog:
	git log --pretty=format:"hiphop ($(HZVERSION)-1) unstable; urgency=low%n%n  * %s%n%n -- %an <%ae>  %cD%n" > ChangeLog
